// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 3UGM9QESBjorrc4Kg2zYnR
// Component: q9Bhky9pFVvT
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import SideBar from "../../SideBar"; // plasmic-import: wLchbCnIJO/component
import Separator from "../../Separator"; // plasmic-import: bPy7gX0I0X/component
import ButtonPrimary from "../../ButtonPrimary"; // plasmic-import: za4D064K-t/component
import ProjectCard from "../../ProjectCard"; // plasmic-import: pVRNuEeocz/component

import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_blank_project.module.css"; // plasmic-import: 3UGM9QESBjorrc4Kg2zYnR/projectcss
import * as sty from "./PlasmicHomepage.module.css"; // plasmic-import: q9Bhky9pFVvT/css

import WestBlack24DpsvgIcon from "./icons/PlasmicIcon__WestBlack24Dpsvg"; // plasmic-import: nSiW_ELy5/icon
import BaselineSearch24PxsvgIcon from "./icons/PlasmicIcon__BaselineSearch24Pxsvg"; // plasmic-import: G6ZN2vHRb/icon
import BaselineAdd24PxsvgIcon from "./icons/PlasmicIcon__BaselineAdd24Pxsvg"; // plasmic-import: 2NASHof2q/icon

export type PlasmicHomepage__VariantMembers = {};

export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  root?: p.Flex<"div">;
  sideBar?: p.Flex<typeof SideBar>;
  pageWrapper?: p.Flex<"div">;
  filterBar?: p.Flex<"div">;
  backButton?: p.Flex<"a"> & Partial<LinkProps>;
  separator?: p.Flex<typeof Separator>;
  textbox?: p.Flex<"input">;
  pageSubWrapper?: p.Flex<"div">;
  pageContent?: p.Flex<"div">;
  h1?: p.Flex<"h1">;
  projectsGrid?: p.Flex<"div">;
};

export interface DefaultHomepageProps {
  dataFetches: PlasmicHomepage__Fetches;
}

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;
  dataFetches?: PlasmicHomepage__Fetches;
  forNode?: string;
}) {
  const { variants, args, overrides, forNode, dataFetches } = props;

  return (
    <React.Fragment>
      <Head>
        <title key="title">{""}</title>
        <meta key="og:title" property="og:title" content={""} />
        <meta
          key="description"
          name="description"
          property="og:description"
          content={""}
        />
      </Head>

      <div
        data-plasmic-name={"root"}
        data-plasmic-override={overrides.root}
        data-plasmic-root={true}
        data-plasmic-for-node={forNode}
        className={classNames(defaultcss.all, projectcss.root_reset, sty.root)}
      >
        <SideBar
          data-plasmic-name={"sideBar"}
          data-plasmic-override={overrides.sideBar}
          className={classNames("__wab_instance", sty.sideBar)}
        />

        <div
          data-plasmic-name={"pageWrapper"}
          data-plasmic-override={overrides.pageWrapper}
          className={classNames(defaultcss.all, sty.pageWrapper)}
        >
          <div
            data-plasmic-name={"filterBar"}
            data-plasmic-override={overrides.filterBar}
            className={classNames(defaultcss.all, sty.filterBar)}
          >
            <div className={classNames(defaultcss.all, sty.box___1MRlj)}>
              <p.PlasmicLink
                data-plasmic-name={"backButton"}
                data-plasmic-override={overrides.backButton}
                className={classNames(defaultcss.all, sty.backButton)}
                component={Link}
                href={"https://www.plasmic.app/" as const}
                platform={"nextjs"}
              >
                <WestBlack24DpsvgIcon
                  className={classNames(defaultcss.all, sty.svg__zeTjy)}
                  role={"img"}
                />

                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.box__hGb3K
                  )}
                >
                  {"Retour"}
                </div>
              </p.PlasmicLink>

              <Separator
                data-plasmic-name={"separator"}
                data-plasmic-override={overrides.separator}
                className={classNames("__wab_instance", sty.separator)}
                navBarSeparator={"navBarSeparator" as const}
              />

              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.box__ktKBu
                )}
              >
                {"Filtrer par "}
              </div>

              <input
                data-plasmic-name={"textbox"}
                data-plasmic-override={overrides.textbox}
                className={classNames(defaultcss.input, sty.textbox)}
                placeholder={"Some placeholder" as const}
                size={1 as const}
                type={"text" as const}
                value={"Some value" as const}
              />
            </div>

            <ButtonPrimary
              className={classNames("__wab_instance", sty.buttonPrimary__iBcHf)}
              iconOnly={"iconOnly" as const}
              size={["tiny"]}
            >
              <BaselineSearch24PxsvgIcon
                className={classNames(defaultcss.all, sty.svg__nuIhx)}
                role={"img"}
              />
            </ButtonPrimary>
          </div>

          <div
            data-plasmic-name={"pageSubWrapper"}
            data-plasmic-override={overrides.pageSubWrapper}
            className={classNames(defaultcss.all, sty.pageSubWrapper)}
          >
            <div
              data-plasmic-name={"pageContent"}
              data-plasmic-override={overrides.pageContent}
              className={classNames(defaultcss.all, sty.pageContent)}
            >
              <h1
                data-plasmic-name={"h1"}
                data-plasmic-override={overrides.h1}
                className={classNames(
                  defaultcss.h1,
                  defaultcss.__wab_text,
                  sty.h1
                )}
              >
                {"Projects"}
              </h1>

              <p.Stack
                as={"div"}
                data-plasmic-name={"projectsGrid"}
                data-plasmic-override={overrides.projectsGrid}
                hasGap={true}
                className={classNames(defaultcss.all, sty.projectsGrid)}
              >
                <ProjectCard
                  className={classNames(
                    "__wab_instance",
                    sty.projectCard__dAc8V
                  )}
                  projectBgImage={
                    <img
                      alt={""}
                      className={classNames(defaultcss.img, sty.img__hn9Nj)}
                      role={"img"}
                      src={
                        "/plasmic/blank_project/images/nickForemanNickForemanIsrConcept17Jpg.jpeg"
                      }
                    />
                  }
                />

                <ProjectCard
                  className={classNames(
                    "__wab_instance",
                    sty.projectCard__g3Rcb
                  )}
                  projectBgImage={
                    <img
                      alt={""}
                      className={classNames(defaultcss.img, sty.img__uZPqz)}
                      role={"img"}
                      src={
                        "/plasmic/blank_project/images/_86C5B3E0Fb8049C6922F03E36759A179Jpg.jpeg"
                      }
                    />
                  }
                />

                <ProjectCard
                  className={classNames(
                    "__wab_instance",
                    sty.projectCard__fTk39
                  )}
                  projectBgImage={
                    <img
                      alt={""}
                      className={classNames(defaultcss.img, sty.img__yM0Pl)}
                      role={"img"}
                      src={
                        "/plasmic/blank_project/images/_7Ef70D6E2A72Cd1375D509C0E305267Bjpg.jpeg"
                      }
                    />
                  }
                />

                <ProjectCard
                  className={classNames(
                    "__wab_instance",
                    sty.projectCard___0QyC2
                  )}
                  projectBgImage={
                    <img
                      alt={""}
                      className={classNames(defaultcss.img, sty.img__gxXrd)}
                      role={"img"}
                      src={
                        "/plasmic/blank_project/images/_2D2575Ef486559Ed5Ad60655Ef152C84Jpg.jpeg"
                      }
                    />
                  }
                />

                <ProjectCard
                  className={classNames(
                    "__wab_instance",
                    sty.projectCard__hbsBx
                  )}
                  projectBgImage={
                    <img
                      alt={""}
                      className={classNames(defaultcss.img, sty.img__lYl4Y)}
                      role={"img"}
                      src={
                        "/plasmic/blank_project/images/girlFaceDrawing3Jpg.jpeg"
                      }
                    />
                  }
                />

                <ProjectCard
                  className={classNames(
                    "__wab_instance",
                    sty.projectCard__zrWy9
                  )}
                  projectBgImage={
                    <img
                      alt={""}
                      className={classNames(defaultcss.img, sty.img__nl7Xm)}
                      role={"img"}
                      src={"/plasmic/blank_project/images/_0Jpg.jpeg"}
                    />
                  }
                />

                <ProjectCard
                  className={classNames(
                    "__wab_instance",
                    sty.projectCard__pbFrE
                  )}
                  projectBgImage={
                    <img
                      alt={""}
                      className={classNames(defaultcss.img, sty.img___8Ft1X)}
                      role={"img"}
                      src={
                        "/plasmic/blank_project/images/wardenlightStudioDellCityWarjpg.jpeg"
                      }
                    />
                  }
                />

                <ProjectCard
                  className={classNames(
                    "__wab_instance",
                    sty.projectCard__rc2P5
                  )}
                  projectBgImage={
                    <img
                      alt={""}
                      className={classNames(defaultcss.img, sty.img___0RZOd)}
                      role={"img"}
                      src={
                        "/plasmic/blank_project/images/danielLiang201811026Jpg.jpeg"
                      }
                    />
                  }
                />

                <ProjectCard
                  className={classNames(
                    "__wab_instance",
                    sty.projectCard__ea8Q
                  )}
                  projectBgImage={
                    <img
                      alt={""}
                      className={classNames(defaultcss.img, sty.img__ghXie)}
                      role={"img"}
                      src={
                        "/plasmic/blank_project/images/wardenlightStudioWardenlightBlurShadowOfWarMinasithil01Jpg.jpeg"
                      }
                    />
                  }
                />

                <ProjectCard
                  className={classNames(
                    "__wab_instance",
                    sty.projectCard__ysNjz
                  )}
                  projectBgImage={
                    <img
                      alt={""}
                      className={classNames(defaultcss.img, sty.img__tWcJw)}
                      role={"img"}
                      src={
                        "/plasmic/blank_project/images/wardenlightStudioWlsBsHaloRememberBjpg.jpeg"
                      }
                    />
                  }
                />

                <ProjectCard
                  className={classNames(
                    "__wab_instance",
                    sty.projectCard__opxz
                  )}
                  projectBgImage={
                    <img
                      alt={""}
                      className={classNames(defaultcss.img, sty.img__yrzru)}
                      role={"img"}
                      src={
                        "/plasmic/blank_project/images/wardenlightStudioWlsSonyCabinFeverChurch01Jpg.jpeg"
                      }
                    />
                  }
                />

                <ProjectCard
                  className={classNames(
                    "__wab_instance",
                    sty.projectCard__r6IbU
                  )}
                  projectBgImage={
                    <img
                      alt={""}
                      className={classNames(defaultcss.img, sty.img__y31Ts)}
                      role={"img"}
                      src={
                        "/plasmic/blank_project/images/wojtekFus1Fulljpg.jpeg"
                      }
                    />
                  }
                />

                <ProjectCard
                  className={classNames(
                    "__wab_instance",
                    sty.projectCard__l4JZc
                  )}
                  projectBgImage={
                    <img
                      alt={""}
                      className={classNames(defaultcss.img, sty.img__osGnG)}
                      role={"img"}
                      src={"/plasmic/blank_project/images/x25IpE0Jpg.jpeg"}
                    />
                  }
                />

                <ProjectCard
                  className={classNames(
                    "__wab_instance",
                    sty.projectCard__simh0
                  )}
                  projectBgImage={
                    <img
                      alt={""}
                      className={classNames(defaultcss.img, sty.img__aBlc6)}
                      role={"img"}
                      src={"/plasmic/blank_project/images/yanLiangKdajpg.jpeg"}
                    />
                  }
                />
              </p.Stack>
            </div>

            <div className={classNames(defaultcss.all, sty.box__txupr)}>
              <ButtonPrimary
                className={classNames(
                  "__wab_instance",
                  sty.buttonPrimary__h2Yyx
                )}
                iconOnly={"iconOnly" as const}
                size={[]}
              >
                <BaselineAdd24PxsvgIcon
                  className={classNames(defaultcss.all, sty.svg___6Ug4I)}
                  role={"img"}
                />
              </ButtonPrimary>
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "sideBar",
    "pageWrapper",
    "filterBar",
    "backButton",
    "separator",
    "textbox",
    "pageSubWrapper",
    "pageContent",
    "h1",
    "projectsGrid"
  ],
  sideBar: ["sideBar"],
  pageWrapper: [
    "pageWrapper",
    "filterBar",
    "backButton",
    "separator",
    "textbox",
    "pageSubWrapper",
    "pageContent",
    "h1",
    "projectsGrid"
  ],
  filterBar: ["filterBar", "backButton", "separator", "textbox"],
  backButton: ["backButton"],
  separator: ["separator"],
  textbox: ["textbox"],
  pageSubWrapper: ["pageSubWrapper", "pageContent", "h1", "projectsGrid"],
  pageContent: ["pageContent", "h1", "projectsGrid"],
  h1: ["h1"],
  projectsGrid: ["projectsGrid"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  sideBar: typeof SideBar;
  pageWrapper: "div";
  filterBar: "div";
  backButton: "a";
  separator: typeof Separator;
  textbox: "input";
  pageSubWrapper: "div";
  pageContent: "div";
  h1: "h1";
  projectsGrid: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
    dataFetches?: PlasmicHomepage__Fetches;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicHomepage__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicHomepage__ArgProps,
      internalVariantPropNames: PlasmicHomepage__VariantProps
    });

    const { dataFetches } = props;

    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    sideBar: makeNodeComponent("sideBar"),
    pageWrapper: makeNodeComponent("pageWrapper"),
    filterBar: makeNodeComponent("filterBar"),
    backButton: makeNodeComponent("backButton"),
    separator: makeNodeComponent("separator"),
    textbox: makeNodeComponent("textbox"),
    pageSubWrapper: makeNodeComponent("pageSubWrapper"),
    pageContent: makeNodeComponent("pageContent"),
    h1: makeNodeComponent("h1"),
    projectsGrid: makeNodeComponent("projectsGrid"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
